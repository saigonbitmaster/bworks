geoip2 /usr/share/GeoIP/GeoLite2-Country.mmdb {
    $geoip2_data_country_code default=US source=$remote_addr country iso_code;
    $geoip2_data_country_name country names en;
}

add_header X-COUNTRY-CODE $geoip2_data_country_code;
add_header X-COUNTRY-NAME $geoip2_data_country_name;

map $geoip2_data_country_code $allowed_country {
    default no;
    VN yes;
}

server {
    listen 80;
    listen [::]:80;

    server_name ${FQDN};

    return 301 https://$host$request_uri;
}

server {
    listen              443 ssl;
    listen              [::]:443 ssl;
    server_name         ${FQDN};
    ssl_certificate     /etc/letsencrypt/live/${FQDN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${FQDN}/privkey.pem;

    if ($allowed_country = no) {
        return 444;
    }

    location / {
        proxy_pass http://api:4001;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    }

    # return 200 "
    #     remote_addr: [$remote_addr]
    #     geoip2_data_country_code: [$geoip2_data_country_code]
    #     geoip2_data_country_name: [$geoip2_data_country_name]
    #     proxy_add_x_forwarded_for: [$proxy_add_x_forwarded_for]
    #     allowed_country: [$allowed_country]
    #     Nginx + geoip2 + let's encrypt successfully installed!";

    # add_header Content-Type text/plain;
}